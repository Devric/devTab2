// Generated by CoffeeScript 1.3.3
/*   dCache for all devric plugins
*/

if (window.dCache === void 0) {
  window.dCache = {};
}

/* ===========================
  Plugin Class
==============================
*/


(function($, window) {
  /* Plugin class
  */

  var dTab;
  dTab = (function() {
    /* default elements
    ======================
    */

    function dTab(el, opts) {
      this.el = $(el);
      this.opts = opts;
      this.meta = this.el.data();
      this.id = this.el.attr('id');
      this.tabs = this.el.find('.tabs');
      this.width = this.tabs.outerWidth(true);
      this.height = this.tabs.outerHeight(true);
    }

    dTab.prototype.log = function(msg) {
      if (this.opts.debug) {
        return typeof console !== "undefined" && console !== null ? console.log(msg) : void 0;
      }
    };

    /* plugin default options 
    ======================
    */


    dTab.prototype.defaults = {
      'lock': false,
      fx: 'none',
      debug: false
    };

    /* initiator
    ======================
    */


    dTab.prototype.init = function() {
      return this.opts = $.extend({}, this.defaults, this.opts, this.meta);
    };

    /*  builder
    =================
    */


    dTab.prototype.build = function(obj) {
      this.log('set: ' + obj['width']);
      this.log('set: ' + obj['height']);
      this.log('============');
      this.log('auto: ' + this.weight);
      this.log('auto: ' + this.height);
      this.log('============');
      this.el.prepend('<ul class="nav" />');
      this.el.find('.tabs').find('.title').prependTo(this.el.find('.nav'));
      if (this.opts['fx'] !== 'fade' || this.opts['fx'] !== 'none' || this.opts['lock']) {
        this.el.css({
          overflow: 'hidden',
          width: (obj['width'] ? obj['width'] : this.width),
          height: (obj['height'] ? obj['height'] : this.height)
        });
        return this.tabs.css({
          width: (obj['width'] ? obj['width'] : this.width),
          height: (obj['height'] ? obj['height'] : this.height)
        });
      } else {
        return this.tabs.not(':first').css({
          display: 'none'
        });
      }
    };

    /* FX
    =================
    */


    dTab.prototype.fx = function(fx) {
      var effects, obj;
      obj = this;
      if (!fx || fx === null) {
        fx = 'none';
      }
      effects = {
        none: function() {
          return console.log('detault');
        },
        fade: function() {
          return console.log('fade');
        },
        slideX: function() {
          return console.log('slideX');
        },
        slideY: function() {
          return console.log('slideY');
        }
      };
      return effects[fx]();
    };

    return dTab;

  })();
  /* == Exports =============
  */

  return dCache['dTab'] = dTab;
})(jQuery, window);

/* ===========================
  Jquery Plugin Interface
==============================
*/


(function($, window) {
  var pluginName;
  if (window.plugin === void 0) {
    window.plugin = {};
  }
  pluginName = 'devTab';
  plugin[pluginName] = '0.1.0Dead simple tabs with slideshows';
  plugin[pluginName + '_url'] = 'devric.co.cc';
  /* Adds plugin object to jQuery
  */

  return $.fn[pluginName] = function(options) {
    return this.each(function() {
      var D;
      D = new dCache['dTab'](this, options);
      D.init();
      /* build it
      */

      D.build({
        width: D.opts.width,
        height: D.opts.height
      });
      /* Effects
          if no effects options, use default
      */

      if (D.opts.fx) {
        D.fx(D.opts.fx);
      } else {
        D.fx();
      }
      return D.log(D.opts);
    });
  };
})(jQuery, window);

/* ============== AUTO RUN DEFAULT =============
*/


/* =================================================
 Any new methods will require re-initiate the plugin
=================================================
*/


$(function() {
  return $('.dtab').devTab({
    test: 'something',
    debug: true
  });
});
